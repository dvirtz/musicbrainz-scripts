{
	"version": "2.0.0",
	"tasks": [
		{
			"type": "npm",
			"script": "watch",
			"group": "build",
			"problemMatcher": [],
			"label": "npm: watch",
			"detail": "yarn turbo watch check-types lint --experimental-write-cache",
		},
		{
			"type": "shell",
			"label": "npm: dev",
			"command": "yarn",
			"args": [
				"workspace",
				"@dvirtz/${input:workspace}",
				"dev"
			],
			"isBackground": true,
			"problemMatcher": [
				{
					"pattern": [
						{
							"regexp": ".",
							"file": 1,
							"location": 2,
							"message": 3
						}
					],
					"background": {
						"activeOnStart": true,
						"beginsPattern": "press h + enter to show help",
						"endsPattern": "."
					}
				}
			]
		},
		{
			"label": "configure active workspace",
			"type": "shell",
			"command": "echo ${input:configure-workspace}",
			"problemMatcher": [],
		},
		{
			"label": "configure musicbrainz url",
			"type": "shell",
			"command": "echo ${input:configure-musicbrainz-url}",
			"problemMatcher": [],
		}
	],
	"inputs": [
		{
			"id": "configure-workspace",
			"type": "command",
			"command": "shellCommand.execute",
			"args": {
				"command": "node -e \"const fs = require('fs'); const path = require('path'); try { const dirs = fs.readdirSync('scripts', { withFileTypes: true }).filter(dirent => dirent.isDirectory()).map(dirent => dirent.name); console.log(dirs.join('\\n')); } catch (err) { console.error('Error:', err.message); }\"",
				"rememberPrevious": true,
				"taskId": "workspace",
				"useSingleResult": true,
			},
		},
		{
			"id": "workspace",
			"type": "command",
			"command": "shellCommand.execute",
			"args": {
				"command": "echo ${taskId:workspace}",
				"useSingleResult": true,
			}
		},
		{
			"id": "configure-musicbrainz-url",
			"type": "command",
			"command": "shellCommand.execute",
			"args": {
				"command": "echo ${prompt:Enter MusicBrainz URL}",
				"useSingleResult": true,
				"taskId": "musicbrainz-url",
				"rememberPrevious": true,
			}
		}
	]
}
